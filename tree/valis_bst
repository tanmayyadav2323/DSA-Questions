class Solution {
public:
    bool isValidBST(TreeNode* root,int low = INT_MIN,int high = INT_MAX) {
        if(root == NULL)return true;
        if((root->val > low && root->val < high) == false)return false;
        bool ls = isValidBST(root->left,low,root->val);
        bool rs = isValidBST(root->right,root->val,high);
        return ls && rs;
    }
};

class Solution {
public:
    TreeNode* prev =NULL;
    bool isValidBST(TreeNode* root) {
        if(root == NULL)return true;
        if(isValidBST(root->left) == false)return false;
        if(prev && prev->val >= root->val) return false;
        prev = root;
        return isValidBST(root->right);
    }
};